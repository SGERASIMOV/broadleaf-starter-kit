application:
  configuration:
    input.stats-user: admin
    input.stats-pass: pa55w0rd
    input.stats-port: "1926"
    input.stats-url: /admin?stats

  interfaces:
    input:
      stats-user: "bind(workflow#input.stats-user)"
      stats-pass: "bind(workflow#input.stats-pass)"
      stats-port: "bind(workflow#input.stats-port)"
      stats-url: "bind(workflow#input.stats-url)"
    lb-manage:
      add-servers: "bind(workflow#actions.add-servers)"
      reconfigure-servers: "bind(workflow#actions.reconfigure-servers)"
    output:
      lb-stats: "bind(workflow#result.lb-stats)"

  components:
    workflow:
      type: workflow.Instance
      interfaces:
        input:
          stats-user: configuration(string)
          stats-pass: configuration(string)
          stats-port: configuration(string)
          stats-url: configuration(string)

        actions:
          add-servers: receive-command(list<string> app-hosts, string app-port, string lb-bucket => string entry-url)
          reconfigure-servers: receive-command(list<string> app-hosts, string app-port, string lb-bucket)

        result:
          lb-stats: publish-signal(object)

      configuration:
        configuration.workflows:
          launch:
            parameters:
              - stats-user: &stats-user
                  description: haproxy statistics user
              - stats-pass: &stats-pass
                  description: haproxy statistics user pass
              - stats-port: &stats-port
                  description: haproxy statistics port 
              - stats-url: &stats-url
                  description: haproxy statistics url

            steps:
              - provision-vm:
                  action: provisionAmazonVm
                  phase: provision
                  parameters:
                    roleName: default
                    hardwareId: m1.small
                    retryCount: 1
                    jcloudsProvider: aws-ec2
                    jcloudsEndpoint: https://ec2.us-east-1.amazonaws.com
                    jcloudsRegions: us-east-1
                    jcloudsNodeNamePrefix: component
                    jcloudsIdentity: "{$.identity}"
                    jcloudsCredential: "{$.credential}"
                    vmIdentity: ubuntu
                    imageId: us-east-1/ami-967edcff
                    ec2SecurityGroup: default
                  output:
                    lb-host: ips

              - lb-install:
                  action: "chefsolo"
                  precedingPhases: [ provision ]
                  phase: lb-install
                  parameters:
                    roles: [ default ]
                    runList: ["recipe[haproxy]"]
                    recipeUrl: "https://s3.amazonaws.com/qubell-starter-kit-artifacts/qubell-bazaar/component-haproxy-cookbooks-stable-2db3cfa.tar.gz"
                    jattrs:
                      haproxy:
                        stats_user: "{$.stats-user}"
                        stats_pass: "{$.stats-pass}"
                        stats_port: "{$.stats-port}"
                        stats_url: "{$.stats-url}"
            return:
              lb-stats:
                value:
                  lb-host: "{$.lb-host[0]}"
                  lb-statistics-url: "http://{$.lb-host}:{$.stats-port}{$.stats-url}"
                  stats-user: "{$.stats-user}"
                  stats-pass: "{$.stats-pass}"

          add-servers:
            parameters:
              - app-hosts:
                  description: "server:port add to lb"
              - app-port:
                  description: "application port to lb"
              - lb-bucket:
                  description: "lb bucket (proto://lb-type:port)for app-hosts"

            steps:
              - add-servers:
                  action: "chefsolo"
                  parameters:
                    roles: [ default ]
                    runList: [ "recipe[haproxy::add_servers]" ]
                    recipeUrl: "https://s3.amazonaws.com/qubell-starter-kit-artifacts/qubell-bazaar/component-haproxy-cookbooks-stable-2db3cfa.tar.gz"
                    jattrs:
                      haproxy:
                        server: "{$.app-hosts}"
                        port: "{$.app-port}"
                        bucket: "{$.lb-bucket}"
            return:
              entry-url:
                #this url should depend on lb-bucket and generated somewhere inside
                value: "http://{$.lb-stats.lb-host}"

          reconfigure-servers:
            parameters:
              - app-hosts:
                  description: "server:port add to lb"
              - app-port:
                  description: "application port to lb"
              - lb-bucket:
                  description: "lb bucket (proto://lb-type:port)for app-hosts"

            steps:
              - reconfigure-servers:
                  action: "chefsolo"
                  parameters:
                    roles: [ default ]
                    runList: [ "recipe[haproxy::reconfigure]" ]
                    recipeUrl: "https://s3.amazonaws.com/qubell-starter-kit-artifacts/qubell-bazaar/component-haproxy-cookbooks-stable-2db3cfa.tar.gz"
                    jattrs:
                      haproxy:
                        server: "{$.app-hosts}"
                        port: "{$.app-port}"
                        bucket: "{$.lb-bucket}"
